/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controler.ControlAnalisadorLexico;
import controler.ControlArquivo;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Insets;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import model.Erro;
import model.Token;

/**
 *
 * @author lucas-bernardo
 */
public class JMain extends javax.swing.JFrame {

    private javax.swing.JTabbedPane tabbedPane;
    private int contadorArquivos = 1;
    TabelaLexemas tabelaLexemas = new TabelaLexemas();
    ControlAnalisadorLexico analisadorLexico = new ControlAnalisadorLexico();

    /**
     * Creates new form JMain
     */
    public JMain() {
        initComponents();
        initComponentsTwo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPainelDeSaida = new javax.swing.JTabbedPane();
        jPanelLogsCompilacao = new javax.swing.JPanel();
        jPanelTabelaLexemas = new javax.swing.JPanel();
        jPanelPrincipal = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArquivo = new javax.swing.JMenu();
        jMenuItemNovoArquivo = new javax.swing.JMenuItem();
        jMenuItemAbrirArquivo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSalvarArquivo = new javax.swing.JMenuItem();
        jMenuItemSalvarArquivoComo = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSair = new javax.swing.JMenuItem();
        jMenuEditar = new javax.swing.JMenu();
        jMenuCompilar = new javax.swing.JMenu();
        jMenuItemAnaliseLexica = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanelLogsCompilacaoLayout = new javax.swing.GroupLayout(jPanelLogsCompilacao);
        jPanelLogsCompilacao.setLayout(jPanelLogsCompilacaoLayout);
        jPanelLogsCompilacaoLayout.setHorizontalGroup(
            jPanelLogsCompilacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 847, Short.MAX_VALUE)
        );
        jPanelLogsCompilacaoLayout.setVerticalGroup(
            jPanelLogsCompilacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        jTabbedPainelDeSaida.addTab("Logs de compilação", jPanelLogsCompilacao);

        javax.swing.GroupLayout jPanelTabelaLexemasLayout = new javax.swing.GroupLayout(jPanelTabelaLexemas);
        jPanelTabelaLexemas.setLayout(jPanelTabelaLexemasLayout);
        jPanelTabelaLexemasLayout.setHorizontalGroup(
            jPanelTabelaLexemasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 847, Short.MAX_VALUE)
        );
        jPanelTabelaLexemasLayout.setVerticalGroup(
            jPanelTabelaLexemasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        jTabbedPainelDeSaida.addTab("Tabela de lexemas", jPanelTabelaLexemas);

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );

        jMenuArquivo.setText("Arquivo");

        jMenuItemNovoArquivo.setText("Novo arquivo");
        jMenuItemNovoArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNovoArquivoActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemNovoArquivo);

        jMenuItemAbrirArquivo.setText("Abrir arquivo");
        jMenuItemAbrirArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirArquivoActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemAbrirArquivo);
        jMenuArquivo.add(jSeparator1);

        jMenuItemSalvarArquivo.setText("Salvar arquivo");
        jMenuArquivo.add(jMenuItemSalvarArquivo);

        jMenuItemSalvarArquivoComo.setText("Salvar arquivo como");
        jMenuItemSalvarArquivoComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalvarArquivoComoActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSalvarArquivoComo);
        jMenuArquivo.add(jSeparator2);

        jMenuItemSair.setText("Sair");
        jMenuArquivo.add(jMenuItemSair);

        jMenuBar1.add(jMenuArquivo);

        jMenuEditar.setText("Editar");
        jMenuBar1.add(jMenuEditar);

        jMenuCompilar.setText("Compilar");

        jMenuItemAnaliseLexica.setText("Análise léxica");
        jMenuItemAnaliseLexica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAnaliseLexicaActionPerformed(evt);
            }
        });
        jMenuCompilar.add(jMenuItemAnaliseLexica);

        jMenuBar1.add(jMenuCompilar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPainelDeSaida)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPainelDeSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsTwo() {
        // Abas para multiplos arquivos
        tabbedPane = new javax.swing.JTabbedPane();
    }

    private void jMenuItemNovoArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNovoArquivoActionPerformed
        // TODO add your handling code here:
        criarNovoArquivo();
    }//GEN-LAST:event_jMenuItemNovoArquivoActionPerformed

    private void jMenuItemAnaliseLexicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAnaliseLexicaActionPerformed

        // Inicializa a tela de logs de compilação
        inicializaLogsDeCompilacao();

        // inicio do processo de analise lexica
        inicializaTabelaLexemas();
        
        analisadorLexico.limparErros();
        
        
        // Criando lista de tokens
        String input = getTextoAbaAtiva(); // Obter o codigo fonte
        analisadorLexico.analiseLexica(input);

        // Recupera os erros encontrados
        List<Erro> erros = analisadorLexico.getErros();

        exibeErros(erros);

        // Exibe os tokens na interface
        addTokensTabela(analisadorLexico.getTokens());


    }//GEN-LAST:event_jMenuItemAnaliseLexicaActionPerformed

    private void jMenuItemSalvarArquivoComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalvarArquivoComoActionPerformed
        // TODO add your handling code here:
        String conteudo = getTextoAbaAtiva();
        ControlArquivo.salvarArquivo(conteudo);
    }//GEN-LAST:event_jMenuItemSalvarArquivoComoActionPerformed

    private void jMenuItemAbrirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirArquivoActionPerformed
        // TODO add your handling code here:
        String texto = ControlArquivo.abrirArquivo();
        criarNovoArquivo(texto);
    }//GEN-LAST:event_jMenuItemAbrirArquivoActionPerformed

    private void inicializaTabelaLexemas() {
        tabelaLexemas.limpaTabela();
        // criando a tabela de lexemas
        JTable tabela = tabelaLexemas.tabelaLexemas();
        JScrollPane scrollPane = new JScrollPane(tabela);
        jPanelTabelaLexemas.setLayout(new BorderLayout());
        jPanelTabelaLexemas.add(scrollPane, BorderLayout.CENTER);
        // Exibindo a tabela
        jTabbedPainelDeSaida.add("Tabela de lexemas", jPanelTabelaLexemas);
    }

    private void criarNovoArquivo() {
        jPanelPrincipal.setLayout(new BorderLayout());
        jPanelPrincipal.add(tabbedPane, BorderLayout.CENTER);
        JTextPane textPane = new JTextPane();
        JScrollPane scrollPane = new JScrollPane(textPane);

        // Criando o painel de numeração de linhas e adicionado ao JScrollPane
        PainelNumeroLinhas painelNumeroLinhas = new PainelNumeroLinhas(textPane);
        scrollPane.setRowHeaderView(painelNumeroLinhas);

        String nomeAba = "Arquivo " + contadorArquivos++;
        tabbedPane.addTab(nomeAba, scrollPane);
        
        // Criando o painel do título da aba com o botão de fechar
        JPanel tabPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 5, 0));
        tabPanel.setOpaque(false);
        
        JLabel titleLabel = new JLabel(nomeAba);
        JButton closeButton = new JButton("x");
        closeButton.setMargin(new Insets(0, 2, 0, 2));
        closeButton.setFocusable(false);
        closeButton.setPreferredSize(new Dimension(16, 16));
        closeButton.setFont(new Font("Arial", Font.BOLD, 10));
        closeButton.setBorder(BorderFactory.createEmptyBorder());
        closeButton.setContentAreaFilled(false);

        // Ação para fechar a aba ao clicar no botão
        closeButton.addActionListener(e -> {
            int index = tabbedPane.indexOfComponent(scrollPane);
            if (index != -1) {
                tabbedPane.remove(index);
            }
            contadorArquivos--;
        });

        // Adicionando título e botão ao painel da aba
        tabPanel.add(titleLabel);
        tabPanel.add(closeButton);

        // Definir o painel como título da aba
        tabbedPane.setTabComponentAt(tabbedPane.indexOfComponent(scrollPane), tabPanel); 
    }

    private void criarNovoArquivo(String texto) {
        jPanelPrincipal.setLayout(new BorderLayout());
        jPanelPrincipal.add(tabbedPane, BorderLayout.CENTER);
        JTextPane textPane = new JTextPane();
        textPane.setText(texto);
        JScrollPane scrollPane = new JScrollPane(textPane);

        // Criando o painel de numeração de linhas e adicionado ao JScrollPane
        PainelNumeroLinhas painelNumeroLinhas = new PainelNumeroLinhas(textPane);
        scrollPane.setRowHeaderView(painelNumeroLinhas);

        String nomeAba = "Arquivo " + contadorArquivos++;
        tabbedPane.addTab(nomeAba, scrollPane);
        
        // Criando o painel do título da aba com o botão de fechar
        JPanel tabPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 5, 0));
        tabPanel.setOpaque(false);
        
        JLabel titleLabel = new JLabel(nomeAba);
        JButton closeButton = new JButton("x");
        closeButton.setMargin(new Insets(0, 2, 0, 2));
        closeButton.setFocusable(false);
        closeButton.setPreferredSize(new Dimension(16, 16));
        closeButton.setFont(new Font("Arial", Font.BOLD, 10));
        closeButton.setBorder(BorderFactory.createEmptyBorder());
        closeButton.setContentAreaFilled(false);

        // Ação para fechar a aba ao clicar no botão
        closeButton.addActionListener(e -> {
            int index = tabbedPane.indexOfComponent(scrollPane);
            if (index != -1) {
                tabbedPane.remove(index);
            }
            contadorArquivos--;
        });

        // Adicionando título e botão ao painel da aba
        tabPanel.add(titleLabel);
        tabPanel.add(closeButton);

        // Definir o painel como título da aba
        tabbedPane.setTabComponentAt(tabbedPane.indexOfComponent(scrollPane), tabPanel);
    }

    private String getTextoAbaAtiva() {
        int abaSelecionada = tabbedPane.getSelectedIndex();

        if (abaSelecionada != -1) {
            JScrollPane scrollPane = (JScrollPane) tabbedPane.getComponentAt(abaSelecionada);
            JTextPane textPane = (JTextPane) scrollPane.getViewport().getView();
            return textPane.getText();
        }
        return null;
    }

    private static int getPosicaoLinha(String texto, int linha) {
        if (linha == 0) {
            return 0; // A primeira linha começa no índice 0
        }
        int posicao = -1; // Começa antes do início do texto
        int contadorLinhas = 0;
        while (contadorLinhas < linha - 2) {
            posicao = texto.indexOf("\n", posicao + 1);
            if (posicao == -1) {
                return -1;
            }
            contadorLinhas++;
        }
        return posicao + 1; // Retorna o início da linha correta
    }

    private void pintarLinha(int linha) {
        int abaSelecionada = tabbedPane.getSelectedIndex();
        JTextPane textPane = new JTextPane();
        if (abaSelecionada != -1) {
            JScrollPane scrollPane = (JScrollPane) tabbedPane.getComponentAt(abaSelecionada);
            textPane = (JTextPane) scrollPane.getViewport().getView();
        }

        StyledDocument doc = textPane.getStyledDocument();
        String texto = textPane.getText();

        int inicio = getPosicaoLinha(texto, linha);
        int fim = getPosicaoLinha(texto, linha + 1);
        //int fim = texto.indexOf("\n", inicio);
        //if(fim == -1) fim = texto.length();

        // Criando um estilo para fundo colorido
        SimpleAttributeSet estilo = new SimpleAttributeSet();
        StyleConstants.setBackground(estilo, Color.RED);
        StyleConstants.setForeground(estilo, Color.WHITE);

        // Aplicando o estilo ao intervalo de texto
        doc.setCharacterAttributes(inicio, fim - inicio, estilo, false);
    }

    private void exibeErros(List<Erro> erros) {
        limparLogs();
        if (erros.isEmpty()) {
            mensagemSucesso();
        } else {
            for (Erro erro : erros) {
                //pintarLinha(erro.getLinha());
                addErro(erro);
            }
        }
    }

    // Exibe os erros encontrados na jPanelLogsCompilacao
    private void addErro(Erro erro) {
        // Recuperando o jScrollPanel de logs de compilacao
        JScrollPane jScrollPaneLogsCompilacao = (JScrollPane) jPanelLogsCompilacao.getComponent(0);
        // Recupera o text area
        JTextArea textAreaLogsCompilacao = (JTextArea) jScrollPaneLogsCompilacao.getViewport().getView();
        // Adiciona a descrição do erro ao final do textArea
        textAreaLogsCompilacao.append(erro.toString() + "\n");
    }
    
    private void limparLogs() {
    // Recupera o JScrollPane
    JScrollPane jScrollPaneLogsCompilacao = (JScrollPane) jPanelLogsCompilacao.getComponent(0);
    // Recupera o JTextArea
    JTextArea textAreaLogsCompilacao = (JTextArea) jScrollPaneLogsCompilacao.getViewport().getView();
    // Limpa o conteúdo do JTextArea
    textAreaLogsCompilacao.setText("");
}


    private void mensagemSucesso() {
        // Recuperando o jScrollPanel de logs de compilacao
        JScrollPane jScrollPaneLogsCompilacao = (JScrollPane) jPanelLogsCompilacao.getComponent(0);
        // Recupera o text area
        JTextArea textAreaLogsCompilacao = (JTextArea) jScrollPaneLogsCompilacao.getViewport().getView();
        // Adiciona a descrição do erro ao final do textArea
        textAreaLogsCompilacao.append("Compilado com sucesso!");
    }

    private void inicializaLogsDeCompilacao() {
        JTextArea textArea = new JTextArea();
        JScrollPane scrollPane = new JScrollPane(textArea);
        jPanelLogsCompilacao.setLayout(new BorderLayout());
        jPanelLogsCompilacao.add(scrollPane, BorderLayout.CENTER);
        jTabbedPainelDeSaida.add("Logs de compilação", jPanelLogsCompilacao);
    }

    private void addTokensTabela(List<Token> tokens) {
        if (getTextoAbaAtiva() == null) {
            JOptionPane.showMessageDialog(null, "Caixa de texto vazia!", "Erro", JOptionPane.ERROR_MESSAGE);
        }

        for (int i = 0; i < tokens.size(); i++) {
            tabelaLexemas.addToken(tokens.get(i).getLexema(), tokens.get(i).getToken(), tokens.get(i).getLinha(), tokens.get(i).getColunaInicial(), tokens.get(i).getColunaFinal());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JMain().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuArquivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCompilar;
    private javax.swing.JMenu jMenuEditar;
    private javax.swing.JMenuItem jMenuItemAbrirArquivo;
    private javax.swing.JMenuItem jMenuItemAnaliseLexica;
    private javax.swing.JMenuItem jMenuItemNovoArquivo;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemSalvarArquivo;
    private javax.swing.JMenuItem jMenuItemSalvarArquivoComo;
    private javax.swing.JPanel jPanelLogsCompilacao;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelTabelaLexemas;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPainelDeSaida;
    // End of variables declaration//GEN-END:variables
}
